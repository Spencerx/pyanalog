Welcome to the HyConAVR.ino Program Compiler.
Input program: Jerk system (Alpaca 15)
Target machine: AP/M-1 Mini
Allocating Type INT2pm: Mapping circuit part I1 onto architecture part INT0-0
Allocating Type INT2m: Mapping circuit part I2 onto architecture part INT0-2
Allocating Type INT2pm: Mapping circuit part I3 onto architecture part INT0-1
Allocating Type MUL2pm: Mapping circuit part M1 onto architecture part MLT0-0
Allocating Type MUL2p: Mapping circuit part M2 onto architecture part MLT0-1
Allocating Type SUM2pm: Mapping circuit part S1 onto architecture part SUM0-0
Allocating Type SUM2pm: Mapping circuit part S2 onto architecture part SUM0-1
Allocating Type SUM2m: Mapping circuit part S3 onto architecture part SUM0-2
Resolving variable p4=0.2 at architecture part INT0-1/a0
Resolving variable p2=0.75 at architecture part INT0-2/a0
Resolving variable p3tenth=0.017 at architecture part SUM0-0/a0
Resolving variable p5tenth=0.01 at architecture part SUM0-0/b0
Resolving variable p6tenth=0.1 at architecture part SUM0-2/a0
Observable x (user defined part {'I3': 'pos'}) can be measured at architecture part output INT0-1:pos, adress 0x0126
XBAR@40: Computing XBAR of size NxM=16x16
XBAR@40: Writing bitmatrix[row  0]: 0010000000000000= 2=0x2 -> INT0-0:a       [sending 10100]
XBAR@40: Writing bitmatrix[row  1]: 0001000000000000= 3=0x3 -> INT0-0:b       [sending 11100]
XBAR@40: Writing bitmatrix[row  2]: 0000000000100000=10=0xa -> INT0-1:a       [sending 10101]
XBAR@40: Writing bitmatrix[row  3]: 0000000000000000 [output not enabled] [sending 00000]
XBAR@40: Writing bitmatrix[row  4]: 0000000000000010=14=0xe -> INT0-2:a       [sending 10111]
XBAR@40: Writing bitmatrix[row  5]: 0000000000000000 [output not enabled] [sending 00000]
XBAR@40: Writing bitmatrix[row  6]: 0000000000001000=12=0xc -> MLT0-0:a       [sending 10011]
XBAR@40: Writing bitmatrix[row  7]: 0000000000001000=12=0xc -> MLT0-0:b       [sending 10011]
XBAR@40: Writing bitmatrix[row  8]: 0000000100000000= 7=0x7 -> MLT0-1:a       [sending 11110]
XBAR@40: Writing bitmatrix[row  9]: 0000000000100000=10=0xa -> MLT0-1:b       [sending 10101]
XBAR@40: Writing bitmatrix[row 10]: 0000000000100000=10=0xa -> SUM0-0:a       [sending 10101]
XBAR@40: Writing bitmatrix[row 11]: 0000000000001000=12=0xc -> SUM0-0:b       [sending 10011]
XBAR@40: Writing bitmatrix[row 12]: 0000010000000000= 5=0x5 -> SUM0-1:a       [sending 11010]
XBAR@40: Writing bitmatrix[row 13]: 0000000000000010=14=0xe -> SUM0-1:b       [sending 10111]
XBAR@40: Writing bitmatrix[row 14]: 0000000100000000= 7=0x7 -> SUM0-2:a       [sending 11110]
XBAR@40: Writing bitmatrix[row 15]: 0000000100000000= 7=0x7 -> SUM0-2:b       [sending 11110]
Bitstream to send (80 characters): 11110111101011111010100111010110101111101001110011000001011100000101011110010100
DPT24@60: Storing value 1023 at DPT port  0 (corresponding to INT0-0:a0)
DPT24@60: Storing value 1023 at DPT port  1 (corresponding to INT0-0:b0)
DPT24@60: Storing value  205 at DPT port  2 (corresponding to INT0-1:a0)
DPT24@60: Storing value    0 at DPT port  3 (corresponding to INT0-1:b0)
DPT24@60: Storing value  767 at DPT port  4 (corresponding to INT0-2:a0)
DPT24@60: Storing value    0 at DPT port  5 (corresponding to INT0-2:b0)
DPT24@60: Storing value 1023 at DPT port  6 (corresponding to MLT0-0:a0)
DPT24@60: Storing value 1023 at DPT port  7 (corresponding to MLT0-0:b0)
DPT24@60: Storing value 1023 at DPT port  8 (corresponding to MLT0-1:a0)
DPT24@60: Storing value 1023 at DPT port  9 (corresponding to MLT0-1:b0)
DPT24@60: Storing value   17 at DPT port 10 (corresponding to SUM0-0:a0)
DPT24@60: Storing value   10 at DPT port 11 (corresponding to SUM0-0:b0)
DPT24@60: Storing value  102 at DPT port 12 (corresponding to SUM0-1:a0)
DPT24@60: Storing value   10 at DPT port 13 (corresponding to SUM0-1:b0)
DPT24@60: Storing value  102 at DPT port 14 (corresponding to SUM0-2:a0)
DPT24@60: Storing value  102 at DPT port 15 (corresponding to SUM0-2:b0)
HC@80: Storing value    0 at DPT port  0 (corresponding to INT0-0:ic)
HC@80: Storing value    0 at DPT port  1 (corresponding to INT0-1:ic)
HC@80: Storing value    0 at DPT port  2 (corresponding to INT0-2:ic)
HC@80: Storing True at digital output port 0 (corresponding to INT0-0:icSign)
HC@80: Storing True at digital output port 1 (corresponding to INT0-1:icSign)
HC@80: Storing True at digital output port 2 (corresponding to INT0-2:icSign)
Drawing the XBAR to ../circuits-compiled/Alpaca15-Jerk.png...
